version: '3.8'

services:
  kairoai:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kairoai
    restart: unless-stopped
    ports:
      - "5000:5000"  # KairoAI API
      - "8332:8332"  # Bitcoin RPC
      - "8333:8333"  # Bitcoin P2P
      - "18332:18332"  # Bitcoin Testnet RPC
      - "18333:18333"  # Bitcoin Testnet P2P
    volumes:
      - kairoai_data:/app/.kairoai
      - kairoai_logs:/app/logs
    environment:
      - BITCOIN_NETWORK=mainnet
      - BITCOIN_RPC_USER=${BITCOIN_RPC_USER:-kairoai}
      - BITCOIN_RPC_PASSWORD=${BITCOIN_RPC_PASSWORD:-changeme}
      - BITCOIN_RPC_ALLOWIP=0.0.0.0/0
      - BITCOIN_MAXCONNECTIONS=40
      - BITCOIN_MAXUPLOADTARGET=5000
      - BITCOIN_DBCACHE=1024
      - BITCOIN_MAXMEMPOOL=300
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - kairoai_network

  # Optional: Add monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: kairoai_prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - kairoai_network

  grafana:
    image: grafana/grafana:latest
    container_name: kairoai_grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - kairoai_network

volumes:
  kairoai_data:
    driver: local
  kairoai_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  kairoai_network:
    driver: bridge 